  version: '3.9'

  networks:
    mynetwork:
      driver: bridge

  services:
    db:
      image: mysql:latest
      container_name: db
      restart: always
      environment:
        TZ: Asia/Bangkok
        MYSQL_ROOT_PASSWORD: bluestone88
        MYSQL_DATABASE: react_express
        MYSQL_USER: blue
        MYSQL_PASSWORD: bluestone88
      ports:
        - "3306:3306"
      volumes:
        - ./init.sql/:/docker-entrypoint-initdb.d/init.sql
        # - ./mysqldb:/var/lib/mysql
      command: --default-authentication-plugin=caching_sha2_password
      # command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
      logging:
        driver: json-file
        options:
          max-size: 10m
          max-file: "1"
      networks:
        - mynetwork
      
    api: 
      build: 
        context: ./server
        dockerfile: Dockerfile
      container_name: api
      restart: always
      ports:
        - "3000:3000"
      depends_on: 
        - db
      env_file:
        - ./server/.ENV.prod
      # environment:
      #   TZ: Asia/Bangkok
      #   PORT: 3000
      #   JWT_SECRET_KEY: patomporn
      #   MYSQL_HOST: db
      #   MYSQL_USER: blue
      #   MYSQL_PASSWORD: bluestone88
      #   MYSQL_PORT: 3306
      #   BCRYPT_SALT: 10
      logging:
        driver: json-file
        options:
          max-size: 10m
          max-file: "1"
      networks:
        - mynetwork
    
    web:
      build: 
        context: ./client
        dockerfile: Dockerfile
      container_name: web
      restart: always
      ports:
        # public:container port
        - "3001:3001"
      # depends_on: 
      #   - api
      logging:
        driver: json-file
        options:
          max-size: 10m
          max-file: "1"
      networks:
        - mynetwork

    # # Nginx Web Server
    # nginx:
    #   image: nginx:latest
    #   container_name: nginx
    #   restart: always
    #   ports:
    #     - 81:80
    #     - 82:81
    #   volumes:
    #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    #   depends_on:
    #     - web
    #   networks:
    #     - mynetwork